{"ast":null,"code":"var _jsxFileName = \"/Users/karishmas/Documents/Portfolio/portfolio1/src/components/ContactForm.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport '../Styles/Contact.css';\nimport Axios from 'axios'; // const emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n//  var required = true;\n// const formValid = ({formErrors, ...rest} ) => {\n//   let valid = true;\n//   //validate form errors being empty\n//   Object.values(formErrors).forEach( val => {\n//     val.length > 0 && (valid = false)\n//   });\n// // validate the form was filled out \n//   Object.values(rest).forEach(val => {\n//     val === null  && (valid = false)\n//   });\n// return valid;\n// }\n\nclass ContactForm extends Component {\n  // constructor(props){\n  //   super(props);\n  //   this.state ={\n  //     firstName: null,\n  //     lastName: null,\n  //     email: null,\n  //     message: null,\n  //     // these are error messages to validate the forms\n  //     formErrors: {\n  //       firstName: \"\",\n  //       lastName: \"\",\n  //       email: \"\",\n  //       message: \"\"\n  //     }\n  //   }\n  // }\n  // handleSubmit = e => {\n  //   e.preventDefault();\n  //   if(formValid(this.state)){\n  //     console.log(`\n  //     ---Submitting--\n  //   First Name:  ${this.state.firstName}\n  //   Last Name:   ${this.state.lastName}\n  //   Email:       ${this.state.email}\n  //   Message:     ${this.state.message}\n  //     `)\n  //   }\n  //   else{\n  //     console.error('Form Invalid - Display error message');\n  //   }\n  // };\n  // handleChange = e => {\n  //   e.preventDefault();\n  //   const { name , value } = e.target;\n  //   let formErrors = this.state.formErrors;\n  //   switch (name){\n  //     case 'firstName':\n  //       formErrors.firstName = value.length < 3 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n  //       break;\n  //     case 'lastName':\n  //       formErrors.lastName = value.length < 3 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n  //       break;\n  //     case 'email':\n  //         formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : 'Invalid Email Address';\n  //         break;\n  //     case 'message':\n  //          formErrors.message = value.length < 10 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n  //           break;\n  //     default:\n  //       break;\n  //   }\n  //   this.setState({ formErrors, [name]:value}, ()=> console.log(this.state));\n  // }\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handledSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        disabled: true\n      });\n      Axios.post('http://localhost:3010/api/email', this.state).then(res => {\n        if (res.data.success) {\n          this.setState({\n            disabled: false,\n            emailSent: true\n          });\n        } else {\n          this.setState({\n            disabled: false,\n            emailSent: false\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          disabled: false,\n          emailSent: false\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null\n    };\n  }\n\n  render() {\n    // const { formErrors } = this.state;\n    return React.createElement(Col, {\n      className: \"colContact\",\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Fredericka+the+Great|Lateef|Open+Sans|Rancho|Permanent+Marker&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Let's Talk \")), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"full-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(Form.Control, {\n      id: \"full-name\",\n      required: \"required\",\n      type: \"text\",\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      value: this.state.name,\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(Form.Control, {\n      id: \"email\",\n      required: \"required\",\n      type: \"email\",\n      placeholder: \"E-Mail Address\",\n      name: \"email\",\n      value: this.state.email,\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      htmlFor: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Form.Control, {\n      id: \"message\",\n      required: \"required\",\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"message\",\n      value: this.state.message,\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(Button, {\n      classname: \"contactButton\",\n      variant: \"light\",\n      type: \"submit\",\n      disabled: this.state.disabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Submit \"), this.state.emailSent === true && React.createElement(\"p\", {\n      className: \"d-inline success-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Email Sent\"), this.state.emailSent === false && React.createElement(\"p\", {\n      className: \"d-inline error-msg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Email Not Sent\")));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/karishmas/Documents/Portfolio/portfolio1/src/components/ContactForm.js"],"names":["React","Component","Form","Button","Col","Axios","ContactForm","constructor","props","handleChange","event","target","value","type","checked","name","setState","handledSubmit","preventDefault","disabled","post","state","then","res","data","success","emailSent","catch","err","email","message","render","handleSubmit"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport '../Styles/Contact.css';\nimport Axios from 'axios';\n\n\n// const emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n//  var required = true;\n// const formValid = ({formErrors, ...rest} ) => {\n//   let valid = true;\n\n//   //validate form errors being empty\n//   Object.values(formErrors).forEach( val => {\n//     val.length > 0 && (valid = false)\n//   });\n\n// // validate the form was filled out \n//   Object.values(rest).forEach(val => {\n//     val === null  && (valid = false)\n//   });\n\n\n// return valid;\n  \n// }\n\n\nclass ContactForm extends Component  {\n\n// constructor(props){\n//   super(props);\n//   this.state ={\n//     firstName: null,\n//     lastName: null,\n//     email: null,\n//     message: null,\n//     // these are error messages to validate the forms\n//     formErrors: {\n//       firstName: \"\",\n//       lastName: \"\",\n//       email: \"\",\n//       message: \"\"\n//     }\n//   }\n// }\n\n// handleSubmit = e => {\n//   e.preventDefault();\n//   if(formValid(this.state)){\n//     console.log(`\n\n//     ---Submitting--\n//   First Name:  ${this.state.firstName}\n//   Last Name:   ${this.state.lastName}\n//   Email:       ${this.state.email}\n//   Message:     ${this.state.message}\n\n//     `)\n\n  \n//   }\n//   else{\n//     console.error('Form Invalid - Display error message');\n//   }\n// };\n\n// handleChange = e => {\n//   e.preventDefault();\n//   const { name , value } = e.target;\n\n//   let formErrors = this.state.formErrors;\n\n\n\n//   switch (name){\n//     case 'firstName':\n//       formErrors.firstName = value.length < 3 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n//       break;\n\n//     case 'lastName':\n//       formErrors.lastName = value.length < 3 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n//       break;\n      \n//     case 'email':\n//         formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : 'Invalid Email Address';\n//         break;\n        \n//     case 'message':\n//          formErrors.message = value.length < 10 & value.length > 0 ? 'Minimum of 3 characters are required' : '';\n//           break;\n\n//     default:\n//       break;\n\n      \n//   }\n//   this.setState({ formErrors, [name]:value}, ()=> console.log(this.state));\n// }\n\nconstructor(props){\n  super(props);\n  this.state ={\n      name: '',\n      email: '',\n      message: '',\n      disabled: false,\n      emailSent: null,\n  }\n}\n\n\nhandleChange = (event) => {\nconst target = event.target;\nconst value = target.type === \"checkbox\" ? target.checked : target.value;\nconst name = target.name;\n\nthis.setState ({\n   [name]: value\n})\n}\n\nhandledSubmit = (event) => {\n  event.preventDefault();\n  \n  this.setState({\n      disabled: true,\n    \n    \n     \n\n  });\n  Axios.post('http://localhost:3010/api/email', this.state)\n      .then(res => {\n          if(res.data.success){\n             this.setState({\n              disabled: false,\n              emailSent: true\n          });  \n          }\n         else {\n             this.setState({\n              disabled: false,\n              emailSent: false\n          });\n         }\n      })\n      .catch(err => {\n          this.setState({\n              disabled: false,\n              emailSent: false\n          });\n      })\n  ;\n}\n\n\nrender() {\n\n  // const { formErrors } = this.state;\nreturn(\n<Col className=\"colContact\" lg={6}>\n<link href=\"https://fonts.googleapis.com/css?family=Fredericka+the+Great|Lateef|Open+Sans|Rancho|Permanent+Marker&display=swap\" rel=\"stylesheet\"></link>\n<h1> <span>Let's Talk </span></h1>\n<Form onSubmit={this.handleSubmit}>\n<Form.Group controlId=\"full-name\">\n <Form.Label htmlFor=\"full-name\" >Full Name</Form.Label>\n <Form.Control  id=\"full-name\" required=\"required\"  type=\"text\" placeholder=\"First Name\" name=\"firstName\" value={this.state.name} noValidate onChange={this.handleChange}/> \n</Form.Group>\n{/* \n{formErrors.firstName.length > 0 && (\n  <p className=\"errorMessage\">{formErrors.firstName}</p>\n)} */}\n{/* \n<Form.Group controlId=\"formBasic\">\n <Form.Label>Last Name</Form.Label>\n <Form.Control  required={required} type=\"text\" placeholder=\"Last Name\" name=\"lastName\" noValidate onChange={this.handleChange} />\n</Form.Group> */}\n\n{/* {formErrors.lastName.length > 0 && (\n  <p className=\"errorMessage\">{formErrors.lastName}</p>\n)} */}\n\n<Form.Group controlId=\"email\">\n   <Form.Label htmlFor=\"email\">E-Mail Address</Form.Label>\n    <Form.Control id=\"email\" required=\"required\"  type=\"email\" placeholder=\"E-Mail Address\" name=\"email\" value={this.state.email} noValidate onChange={this.handleChange} />\n</Form.Group>\n\n{/* {formErrors.email.length > 0 && (\n  <p className=\"errorMessage\">{formErrors.email}</p>\n)} */}\n\n\n<Form.Group controlId=\"message\">\n  <Form.Label htmlFor=\"message\">Message</Form.Label>\n  <Form.Control  id=\"message\" required=\"required\"  as=\"textarea\" rows=\"3\" name=\"message\" value={this.state.message} noValidate onChange={this.handleChange} />\n</Form.Group>\n{/* {formErrors.message.length > 0 && (\n  <p className=\"errorMessage\">{formErrors.message}</p>\n)} */}\n  <br/>\n  <br/>\n<Button classname=\"contactButton\" variant=\"light\" type=\"submit\" disabled={this.state.disabled}>Submit </Button>\n\n\n{this.state.emailSent === true && <p className=\"d-inline success-msg\">Email Sent</p>}\n{this.state.emailSent === false && <p className=\"d-inline error-msg\">Email Not Sent</p>}\n</Form>\n</Col>\n  )\n\n\n\n\n\n}\n\n\n\n}\n\n\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}