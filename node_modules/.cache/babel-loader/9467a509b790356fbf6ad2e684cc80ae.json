{"ast":null,"code":"import _objectWithoutProperties from \"/Users/karishmas/Documents/Portfolio/portfolio1/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/karishmas/Documents/Portfolio/portfolio1/src/components/ContactForm.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport '../Styles/Contact.css';\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = (_ref) => {\n  let formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  let valid = true; //validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out \n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass ContactForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        console.log(`\n\n    ---Submitting--\n  First Name:  ${this.state.firstName}\n  Last Name:   ${this.state.lastName}\n  Email:       ${this.state.email}\n  Message:     ${this.state.message}\n\n    `);\n      } else {\n        console.error('Form Invalid - Display error message');\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case 'firstName':\n          formErrors.firstName = value.length > 0 ? '' : 'Please enter your first name';\n          break;\n\n        case 'lastName':\n          formErrors.lastName = value.length > 0 ? '' : 'Please enter your last name';\n          break;\n\n        case 'email':\n          formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : 'Invalid Email Address';\n          break;\n\n        case 'message':\n          formErrors.message = value.length > 0 ? '' : 'Please enter a message';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      message: null,\n      // these are error messages to validate the forms\n      formErrors: {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n  }\n\n  render() {\n    const formErrors = this.state.formErrors;\n    return React.createElement(Col, {\n      className: \"colContact\",\n      lg: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"link\", {\n      href: \"https://fonts.googleapis.com/css?family=Fredericka+the+Great|Lateef|Open+Sans|Rancho|Permanent+Marker&display=swap\",\n      rel: \"stylesheet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Let's Talk\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), formErrors.firstName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, formErrors.firstName), React.createElement(Form.Group, {\n      controlId: \"formBasic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"text\",\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), formErrors.lastName.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, formErrors.lastName), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"E-Mail Address\"), React.createElement(Form.Control, {\n      required: true,\n      type: \"email\",\n      placeholder: \"E-Mail Address\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, formErrors.email), React.createElement(Form.Group, {\n      controlId: \"formBasicTextArea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Message\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"textarea\",\n      rows: \"3\",\n      name: \"message\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), formErrors.message.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, formErrors.message), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"light\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Submit \")));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/karishmas/Documents/Portfolio/portfolio1/src/components/ContactForm.js"],"names":["React","Component","Form","Button","Col","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","ContactForm","constructor","props","handleSubmit","e","preventDefault","state","console","log","firstName","lastName","email","message","error","handleChange","target","name","value","test","setState","render"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport '../Styles/Contact.css';\n\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({formErrors, ...rest} ) => {\n  let valid = true;\n\n  //validate form errors being empty\n  Object.values(formErrors).forEach( val => {\n    val.length > 0 && (valid = false)\n  });\n\n// validate the form was filled out \n  Object.values(rest).forEach(val => {\n    val === null  && (valid = false)\n  });\n\n\nreturn valid;\n  \n}\n\n\nclass ContactForm extends Component  {\n\nconstructor(props){\n  super(props);\n  this.state ={\n    firstName: null,\n    lastName: null,\n    email: null,\n    message: null,\n    // these are error messages to validate the forms\n    formErrors: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      message: \"\"\n    }\n  }\n}\n\nhandleSubmit = e => {\n  e.preventDefault();\n  if(formValid(this.state)){\n    console.log(`\n\n    ---Submitting--\n  First Name:  ${this.state.firstName}\n  Last Name:   ${this.state.lastName}\n  Email:       ${this.state.email}\n  Message:     ${this.state.message}\n\n    `)\n\n  \n  }\n  else{\n    console.error('Form Invalid - Display error message');\n  }\n};\n\nhandleChange = e => {\n  e.preventDefault();\n  const { name , value } = e.target;\n\n  let formErrors = this.state.formErrors;\n\n\n\n  switch (name){\n    case 'firstName':\n      formErrors.firstName = value.length > 0 ? '' : 'Please enter your first name';\n      break;\n\n    case 'lastName':\n      formErrors.lastName = value.length > 0  ? '' : 'Please enter your last name';\n      break;\n      \n    case 'email':\n        formErrors.email = emailRegex.test(value) && value.length > 0 ? '' : 'Invalid Email Address';\n        break;\n        \n    case 'message':\n          formErrors.message = value.length > 0  ? '' : 'Please enter a message';\n          break;\n\n    default:\n      break;\n\n      \n  }\n  this.setState({ formErrors, [name]:value}, ()=> console.log(this.state));\n}\n\n\n\n\n\n\nrender() {\n\n  const { formErrors } = this.state;\nreturn(\n<Col className=\"colContact\" lg={6}>\n<link href=\"https://fonts.googleapis.com/css?family=Fredericka+the+Great|Lateef|Open+Sans|Rancho|Permanent+Marker&display=swap\" rel=\"stylesheet\"></link>\n<h1>Let's Talk</h1>\n<Form onSubmit={this.handleSubmit}noValidate>\n<Form.Group controlId=\"formBasic\">\n <Form.Label >First Name</Form.Label>\n <Form.Control required type=\"text\" placeholder=\"First Name\" name=\"firstName\"  noValidate onChange={this.handleChange}/> \n</Form.Group>\n\n{formErrors.firstName.length > 0 && (\n  <span className=\"errorMessage\">{formErrors.firstName}</span>\n)}\n\n<Form.Group controlId=\"formBasic\">\n <Form.Label>Last Name</Form.Label>\n <Form.Control required type=\"text\" placeholder=\"Last Name\" name=\"lastName\" noValidate onChange={this.handleChange} />\n</Form.Group>\n\n{formErrors.lastName.length > 0 && (\n  <span className=\"errorMessage\">{formErrors.lastName}</span>\n)}\n\n<Form.Group controlId=\"formBasicEmail\">\n   <Form.Label>E-Mail Address</Form.Label>\n    <Form.Control required type=\"email\" placeholder=\"E-Mail Address\" name=\"email\" noValidate onChange={this.handleChange} />\n</Form.Group>\n\n{formErrors.email.length > 0 && (\n  <span className=\"errorMessage\">{formErrors.email}</span>\n)}\n\n\n<Form.Group controlId=\"formBasicTextArea\">\n  <Form.Label>Message</Form.Label>\n  <Form.Control  required as=\"textarea\" rows=\"3\" name=\"message\" noValidate onChange={this.handleChange} />\n</Form.Group>\n{formErrors.message.length > 0 && (\n  <span className=\"errorMessage\">{formErrors.message}</span>\n)}\n  <br/>\n  <br/>\n<Button variant=\"light\" type=\"submit\">Submit </Button>\n</Form>\n</Col>\n  )\n\n\n\n\n\n}\n\n\n\n}\n\n\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}